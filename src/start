#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

execute "set kernel.sem values" do
  command 'sysctl -w kernel.sem="5010 641280 5010 1024"'
end

# Import service (and start)
directory '/etc/service/db' do
recursive true
end

directory '/etc/service/db/log' do
recursive true
end

template '/etc/service/db/log/run' do
mode 0755
source 'log-run.erb'
variables ({ svc: "db" })
end

file '/etc/service/db/run' do
mode 0755
content File.read("/opt/nanobox/hooks/files/postgresql-run")
end

service 'db' do
  action :enable
  only_if { File.exist?('/etc/service/db/run') }
end

# Wait for server to start
until File.exists?( "/tmp/.s.PGSQL.5432" )
 sleep( 1 )
end

# Wait for server to start
ensure_socket 'db' do
port '(4400|5432)'
action :listening
end

# Attach the IP if provided
if payload[:ips]
  # set up persistance
  file "/etc/nanoinit.d/eth00" do
    content <<-EOF
      ifconfig eth0:0 #{payload[:ips][:default]}
    EOF
    mode 0755
  end

  # bring up interface
  execute "bring up vip" do
    command <<-EOF
      ifconfig eth0:0 #{payload[:ips][:default]}
    EOF
  end
end
